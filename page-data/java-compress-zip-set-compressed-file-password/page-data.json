{
    "componentChunkName": "component---node-modules-gatsby-theme-code-notes-src-templates-note-js",
    "path": "/java-compress-zip-set-compressed-file-password",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"(JAVA) Compress zip Set compressed file password\",\n  \"tags\": [\"java\"],\n  \"created\": \"2023-03-08T17:45:00.000Z\",\n  \"modified\": \"2023-03-08T17:45:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We used zip4j to mangle the password-protected zip files.\"), mdx(\"h2\", {\n    \"id\": \"maven-dependency\"\n  }, \"maven dependency\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"<dependency>\\n  <groupId>net.lingala.zip4j</groupId>\\n  <artifactId>zip4j</artifactId>\\n  <version>1.3.3</version>\\n</dependency>\\n\")), mdx(\"h2\", {\n    \"id\": \"zipperjava\"\n  }, \"Zipper.java\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package io.github.stove99.util;\\n\\nimport java.io.File;\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\nimport net.lingala.zip4j.core.ZipFile;\\nimport net.lingala.zip4j.exception.ZipException;\\nimport net.lingala.zip4j.model.ZipParameters;\\nimport net.lingala.zip4j.util.Zip4jConstants;\\n\\npublic class Zipper {\\n\\n    private List<File> files = new ArrayList<>();\\n\\n    public Zipper add(String file) {\\n        return add(new File(file));\\n    }\\n\\n    public Zipper add(File file) {\\n        if (file == null || !file.exists())\\n            throw new RuntimeException(\\\"Not Found File!!.\\\");\\n\\n        files.add(file);\\n\\n        return this;\\n    }\\n\\n    /**\\n     * compress\\n     */\\n    public void zip(String to) throws ZipException {\\n        this.zip(to, null);\\n    }\\n\\n    /**\\n     * Compress with password\\n     */\\n    public void zip(String to, String password) throws ZipException {\\n        ZipParameters param = new ZipParameters();\\n        param.setCompressionMethod(Zip4jConstants.COMP_DEFLATE);\\n        param.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_ULTRA);\\n\\n        if (password != null) {\\n            param.setEncryptFiles(true);\\n            param.setEncryptionMethod(Zip4jConstants.ENC_METHOD_AES);\\n            param.setAesKeyStrength(Zip4jConstants.AES_STRENGTH_256);\\n            param.setPassword(password);\\n        }\\n\\n        ZipFile zipFile = new ZipFile(to);\\n\\n        if (files.size() == 0) {\\n            throw new RuntimeException(\\\"There is no file to be compressed.\\\");\\n        }\\n\\n        files.forEach(file -> {\\n            try {\\n                if (file.isFile()) {\\n                    zipFile.addFile(file, param);\\n                } else {\\n                    zipFile.addFolder(file, param);\\n                }\\n            } catch (ZipException e) {\\n                e.printStackTrace();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * decompress\\n     */\\n    public void unzip(String file, String password) throws ZipException {\\n        File f = new File(file);\\n\\n        ZipFile zipFile = new ZipFile(f);\\n\\n        if (zipFile.isEncrypted()) {\\n            zipFile.setPassword(password);\\n        }\\n\\n        zipFile.extractAll(f.getParent());\\n    }\\n\\n    public void unzip(String file) throws ZipException {\\n        this.unzip(file, null);\\n    }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"zipper-사용법\"\n  }, \"Zipper \\uC0AC\\uC6A9\\uBC95\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"Zipper zipper = new Zipper();\\n\\n// Compressed with password pass1234\\nzipper.add(\\\"c:\\\\\\\\tmp\\\").add(\\\"c:\\\\\\\\files\\\\\\\\data.txt\\\").zip(\\\"c:\\\\\\\\archive_test.zip\\\", \\\"pass1234\\\");\\n\\n// normal compression\\nzipper.add(\\\"c:\\\\\\\\tmp\\\").add(\\\"c:\\\\\\\\files\\\\\\\\data.txt\\\").zip(\\\"c:\\\\\\\\archive_test.zip\\\");\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"(JAVA) Compress zip Set compressed file password","tags":["java"],"emoji":null,"link":null,"modified":"March 8, 2023","modifiedTimestamp":"2023-03-08T17:45:00.000Z"},"references":[],"fields":{"slug":"\\java_compress_zip_set_compressed_file_password"},"tableOfContents":{"items":[{"url":"#maven-dependency","title":"maven dependency"},{"url":"#zipperjava","title":"Zipper.java"},{"url":"#zipper-사용법","title":"Zipper 사용법"}]},"parent":{"relativePath":"java_compress_zip_set_compressed_file_password.md"}}},"pageContext":{"id":"f0f18a2e-81c3-5242-8a84-0451c1ba4e9e","previous":null,"next":{"id":"b91e91da-ea7b-51e7-b51c-3a1dd6ce2b85","frontmatter":{"title":"주식 포트폴리오 2023-03-09","tags":["주식"]},"fields":{"slug":"\\주식_포트폴리오_2023_03_09"}},"hasUntagged":false,"basePath":"/","tags":[{"tag":"example","totalCount":1,"slug":"/example","path":"\\tag\\example"},{"tag":"java","totalCount":2,"slug":"/java","path":"\\tag\\java"},{"tag":"주식","totalCount":1,"slug":"/","path":"\\tag"}]}},
    "staticQueryHashes": ["1308211557","2744905544","467212769"]}