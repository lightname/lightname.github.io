{"version":3,"file":"component---node-modules-gatsby-theme-code-notes-src-templates-notes-js-f362ca40ae9422e9dab6.js","mappings":"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","sources":["webpack://The Dev Note/./node_modules/gatsby-theme-code-notes/src/components/NoteList/SortButton.tsx","webpack://The Dev Note/./node_modules/gatsby-theme-code-notes/src/components/NoteList/useSortableData.ts","webpack://The Dev Note/./node_modules/@hookit/local-storage/esm/useLocalStorage.js","webpack://The Dev Note/./node_modules/gatsby-theme-code-notes/src/components/NoteList/NoteList.tsx","webpack://The Dev Note/./node_modules/gatsby-theme-code-notes/src/components/NotesPage/NotesPage.tsx","webpack://The Dev Note/./node_modules/gatsby-theme-code-notes/src/templates/Notes.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport { Button } from 'theme-ui'\nimport { BiSortDown, BiSortUp } from 'react-icons/bi'\n\nconst getClassNamesFor = (name, sortConfig) => {\n  if (!sortConfig) {\n    return\n  }\n  return sortConfig.key === name ? `active ${sortConfig.direction}` : undefined\n}\n\nexport const SortButton = ({ requestSort, sortKey, sortConfig, children }) => (\n  <Button\n    variant=\"sort\"\n    type=\"button\"\n    onClick={() => requestSort(sortKey)}\n    className={getClassNamesFor(sortKey, sortConfig)}\n  >\n    {children}\n    {sortConfig.key === sortKey && (\n      <Fragment>\n        {sortConfig.direction === 'descending' ? (\n          <BiSortDown\n            sx={{\n              color: 'inherit',\n              pointerEvents: 'none',\n            }}\n            size=\"15px\"\n          />\n        ) : (\n          <BiSortUp\n            sx={{\n              color: 'inherit',\n              pointerEvents: 'none',\n            }}\n            size=\"15px\"\n          />\n        )}\n      </Fragment>\n    )}\n  </Button>\n)\n","import { useLocalStorage } from '@hookit/local-storage'\nimport { useMemo } from 'react'\n\nexport const useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useLocalStorage(\n    'codeNotesSortConfig',\n    config\n  )\n\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items]\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (\n          a.node.frontmatter[sortConfig.key]?.toLowerCase() <\n          b.node.frontmatter[sortConfig.key]?.toLowerCase()\n        ) {\n          return sortConfig.direction === 'ascending' ? -1 : 1\n        }\n        if (\n          a.node.frontmatter[sortConfig.key]?.toLowerCase() >\n          b.node.frontmatter[sortConfig.key]?.toLowerCase()\n        ) {\n          return sortConfig.direction === 'ascending' ? 1 : -1\n        }\n        return 0\n      })\n    }\n    return sortableItems\n  }, [items, sortConfig])\n\n  const requestSort = (key) => {\n    let direction = 'ascending'\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending'\n    }\n    setSortConfig({ key, direction })\n  }\n\n  return { items: sortedItems, requestSort, sortConfig }\n}\n","import _slicedToArray from \"C:/Users/kkk4/git/gatsby-code-notes/code-notes/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nexport function useLocalStorage(key, initialValue) {\n  var _React$useState = React.useState(function () {\n      try {\n        var item = window.localStorage.getItem(key);\n        if (item) {\n          var test = item.match(/^(\\[|\\{|\\d).*(\\]|\\}|\\d)?$/gm);\n          if (test && test.length) {\n            return JSON.parse(item);\n          } else {\n            return item;\n          }\n        } else {\n          return initialValue;\n        }\n      } catch (error) {\n        return initialValue;\n      }\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    storedValue = _React$useState2[0],\n    setStoredValue = _React$useState2[1];\n  var setValue = React.useCallback(function (value) {\n    try {\n      setStoredValue(value);\n      if (typeof value === 'object') {\n        window.localStorage.setItem(key, JSON.stringify(value));\n      } else {\n        window.localStorage.setItem(key, value);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [key]);\n  return [storedValue, setValue];\n}","import React, { Fragment, FunctionComponent } from 'react'\nimport { Flex } from 'theme-ui'\nimport { NoteListItem } from '../NoteListItem'\nimport { SortButton } from './SortButton'\nimport { useSortableData } from './useSortableData'\nimport slugify from '@alexcarpenter/slugify'\n\ninterface NoteListProps {\n  notes: any[]\n}\n\nexport const NoteList: FunctionComponent<NoteListProps> = ({ notes }) => {\n  const { items, requestSort, sortConfig } = useSortableData(notes, {\n    key: 'title',\n    direction: 'ascending',\n  })\n\n  return (\n    <Fragment>\n      <Flex\n        sx={{\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          mb: 2,\n        }}\n      >\n        <SortButton\n          requestSort={requestSort}\n          sortKey=\"title\"\n          sortConfig={sortConfig}\n        >\n          A-Z\n        </SortButton>\n        <SortButton\n          requestSort={requestSort}\n          sortKey=\"modifiedTimestamp\"\n          sortConfig={sortConfig}\n        >\n          Date\n        </SortButton>\n      </Flex>\n\n      {items.map(({ node }) => {\n        const {\n          title,\n          tags,\n          emoji,\n          modified,\n          modifiedTimestamp,\n        } = node.frontmatter\n        const slug = `/${slugify(node.fields.slug)}`\n        return (\n          <NoteListItem\n            title={title}\n            emoji={emoji}\n            tags={tags}\n            slug={slug}\n            key={slug}\n            dateModified={modified}\n            modifiedTimestamp={modifiedTimestamp}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Heading } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { NoteList } from '../NoteList'\nimport { Layout } from '../Layout'\nimport { useSiteMetadata } from '../../use-site-metadata'\nimport { TagDot } from '../TagDot'\n\nexport const NotesPage = ({ data, pageContext, location }) => {\n  const notes = data.allMdx.edges\n  const { title } = useSiteMetadata()\n  const siteTitle = title\n\n  return (\n    <Layout\n      activeTag={pageContext.tag}\n      path={location.pathname}\n      basePath={pageContext.basePath}\n      hasUntagged={pageContext.hasUntagged}\n      tags={pageContext.tags}\n      title={pageContext.tag ? `Tag: ${pageContext.tag}` : siteTitle}\n    >\n      {pageContext.tag && (\n        <Heading as=\"h1\" variant=\"noteTitle\">\n          {pageContext.tag !== 'untagged' ? (\n            <Fragment>\n              <TagDot tag={pageContext.tag} size=\"0.5em\" /> {pageContext.tag}\n            </Fragment>\n          ) : (\n            <Fragment>Untagged Notes</Fragment>\n          )}\n        </Heading>\n      )}\n      <NoteList notes={notes} />\n    </Layout>\n  )\n}\n","import { graphql } from 'gatsby'\nimport { NotesPage } from '../components/NotesPage'\n\nexport default NotesPage\n\nexport const pageQuery = graphql`\n  fragment AllPages on Mdx {\n    id\n    frontmatter {\n      title\n      tags\n      emoji\n      modified(formatString: \"LL\")\n      modifiedTimestamp: modified\n    }\n    fields {\n      slug\n    }\n  }\n\n  query {\n    allMdx {\n      edges {\n        node {\n          ...AllPages\n        }\n      }\n    }\n  }\n`\n"],"names":["getClassNamesFor","name","sortConfig","key","direction","undefined","SortButton","_ref","requestSort","sortKey","children","React","Button","variant","type","onClick","className","Fragment","BiSortDown","sx","color","pointerEvents","size","BiSortUp","useSortableData","items","config","initialValue","_React$useState","_React$useState2","storedValue","setStoredValue","_useLocalStorage","item","window","localStorage","getItem","test","match","length","JSON","parse","error","value","setItem","stringify","console","setSortConfig","useMemo","sortableItems","_toConsumableArray","sort","a","b","_a$node$frontmatter$s","_b$node$frontmatter$s","_a$node$frontmatter$s2","_b$node$frontmatter$s2","node","frontmatter","toLowerCase","NoteList","notes","_useSortableData","Flex","justifyContent","alignItems","mb","map","_ref2","_node$frontmatter","title","tags","emoji","modified","modifiedTimestamp","slug","slugify","fields","NoteListItem","dateModified","NotesPage","data","pageContext","location","allMdx","edges","siteTitle","useSiteMetadata","jsx","Layout","activeTag","tag","path","pathname","basePath","hasUntagged","Heading","as","TagDot"],"sourceRoot":""}